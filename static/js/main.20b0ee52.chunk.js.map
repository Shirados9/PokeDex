{"version":3,"sources":["components/Pokemon.tsx","components/Button.tsx","assets/banner.svg","App.tsx","index.tsx"],"names":["Pokemon","string","pokemon","name","charAt","toUpperCase","slice","className","src","sprites","front_default","alt","types","map","type","Button","props","onClick","text","App","useState","pokemonList","setPokemonList","offset","limit","generation","setGeneration","loading","setLoading","useEffect","getPokemonInformation","url","a","fetch","response","json","urls","Array","from","length","_","i","Promise","all","then","newPokemonList","sort","b","id","bannerSVG","color","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20b0ee52.chunk.js","sourcesContent":["import \"./Pokemon.css\";\r\nimport { Pokemon as PokemonInterface } from \"../interfaces/pokemon\";\r\n\r\nconst capitalizeFirstLetter = (string: string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nexport default function Pokemon({ pokemon }: { pokemon: PokemonInterface }) {\r\n  const name = capitalizeFirstLetter(pokemon.name);\r\n\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <img src={pokemon.sprites.front_default} alt={name}></img>\r\n      <h3>{name}</h3>\r\n      <div className=\"type-list\">\r\n        {pokemon.types.map(function ({ type }) {\r\n          return (\r\n            <span key={type.name} className={`type ${type.name}`}>\r\n              {type.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Button.css\";\r\n\r\nexport const Button = (props: any) => {\r\n  return (\r\n    <button className={`${props.name} slide`} onClick={props.onClick}>\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/banner.3e1660a9.svg\";","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Pokemon as PokemonInterface } from \"./interfaces/pokemon\";\r\nimport Pokemon from \"./components/Pokemon\";\r\nimport { PulseLoader } from \"react-spinners\";\r\nimport { Button } from \"./components/Button\";\r\nimport bannerSVG from \"./assets/banner.svg\";\r\n\r\nexport default function App() {\r\n  const [pokemonList, setPokemonList] = useState<PokemonInterface[]>([]);\r\n  const [generation, setGeneration] = useState({ offset: 0, limit: 151 });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getPokemonInformation = async (url: string) => {\r\n      const response = await fetch(url);\r\n      return await response.json();\r\n    };\r\n\r\n    setLoading(true);\r\n\r\n    const urls: string[] = Array.from(\r\n      { length: generation.limit },\r\n      (_, i) =>\r\n        `https://pokeapi.co/api/v2/pokemon/${i + 1 + generation.offset}/`\r\n    );\r\n\r\n    Promise.all(urls.map(getPokemonInformation)).then(\r\n      (newPokemonList: PokemonInterface[]) => {\r\n        newPokemonList.sort((a, b) => {\r\n          return a.id - b.id;\r\n        });\r\n        setPokemonList(newPokemonList);\r\n        setLoading(false);\r\n      }\r\n    );\r\n  }, [generation]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"banner\">\r\n        <img src={bannerSVG} alt=\"PokÃ©mon Banner\" />\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"generations\">\r\n          <Button\r\n            onClick={() => setGeneration({ offset: 0, limit: 151 })}\r\n            text=\"Generation I\"\r\n            name=\"first\"\r\n          />\r\n          <Button\r\n            onClick={() => setGeneration({ offset: 151, limit: 100 })}\r\n            text=\"Generation II\"\r\n            name=\"second\"\r\n          />\r\n          <Button\r\n            onClick={() => setGeneration({ offset: 251, limit: 135 })}\r\n            text=\"Generation III\"\r\n            name=\"third\"\r\n          />\r\n          <Button\r\n            onClick={() => setGeneration({ offset: 386, limit: 107 })}\r\n            text=\"Generation IV\"\r\n            name=\"fourth\"\r\n          />\r\n          <Button\r\n            onClick={() => setGeneration({ offset: 493, limit: 156 })}\r\n            text=\"Generation V\"\r\n            name=\"fifth\"\r\n          />\r\n          <Button\r\n            onClick={() => setGeneration({ offset: 649, limit: 72 })}\r\n            text=\"Generation VI\"\r\n            name=\"sixth\"\r\n          />\r\n          <Button\r\n            onClick={() => setGeneration({ offset: 721, limit: 88 })}\r\n            text=\"Generation VII\"\r\n            name=\"seventh\"\r\n          />\r\n          <Button\r\n            onClick={() => setGeneration({ offset: 809, limit: 89 })}\r\n            text=\"Generation VIII\"\r\n            name=\"eight\"\r\n          />\r\n        </div>\r\n        {loading ? (\r\n          <div className=\"loader\">\r\n            <PulseLoader color={\"white\"} loading={loading} size={30} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"pokemon-list\">\r\n            {pokemonList.map(function (pokemon: PokemonInterface) {\r\n              return <Pokemon key={pokemon.id} pokemon={pokemon} />;\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}